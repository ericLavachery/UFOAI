// =============================
// BATTLESCAPE INVENTORY WINDOW
// =============================

window inventory
{
	{
		pos			"256 96"
		size		"512 512"
	}

	func hideinventory
	{
		cmd "ui_pop;"
	}

	// ==================
	// background
	// ==================

	image bar_inventory_deco
	{
		src	"hud/bar_inventory_deco"
		pos		"0 0"
	}

	image bar_inventory
	{
		src	"hud/bar_inventory_mini"
		pos		"0 0"
	}

	string s_backpack_shadow
	{
		pos "338 33"
		contentalign ALIGN_UC
		string	"_Backpack"
		color "0 0 0 1"
		size "160 25"
	}
	string s_backpack
	{
		pos "337 32"
		contentalign ALIGN_UC
		string	"_Backpack"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_left_shadow
	{
		pos "338 156"
		contentalign ALIGN_UC
		string	"_Left Hand"
		color "0 0 0 1"
		size "160 25"
	}
	string s_left
	{
		pos "337 155"
		contentalign ALIGN_UC
		string	"_Left Hand"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_right_shadow
	{
		pos "15 156"
		contentalign ALIGN_UC
		string	"_Right Hand"
		color "0 0 0 1"
		size "160 25"
	}
	string s_right
	{
		pos "14 155"
		contentalign ALIGN_UC
		string	"_Right Hand"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_implant_shadow
	{
		pos "15 83"
		contentalign ALIGN_UC
		string	"_Implant"
		color "0 0 0 1"
		size "160 25"
	}
	string s_implant
	{
		pos "14 82"
		contentalign ALIGN_UC
		string	"_Implant"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_headgear_shadow
	{
		pos "110 83"
		contentalign ALIGN_UC
		string	"_Headgear"
		color "0 0 0 1"
		size "160 25"
	}
	string s_headgear
	{
		pos "109 82"
		contentalign ALIGN_UC
		string	"_Headgear"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_holster_shadow
	{
		pos "338 249"
		contentalign ALIGN_UC
		string	"_Holster"
		color "0 0 0 1"
		size "160 25"
	}
	string s_holster
	{
		pos "337 248"
		contentalign ALIGN_UC
		string	"_Holster"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_belt_shadow
	{
		pos "15 249"
		contentalign ALIGN_UC
		string	"_Belt"
		color "0 0 0 1"
		size "160 25"
	}
	string s_belt
	{
		pos "14 248"
		contentalign ALIGN_UC
		string	"_Belt"
		color "0 0.6 0 1"
		size "160 25"
	}

	string s_floor_shadow
	{
		pos "31 363"
		contentalign ALIGN_UC
		string	"_Floor"
		color "0 0 0 1"
		size "76 25"
	}
	string s_floor
	{
		pos "30 362"
		contentalign ALIGN_UC
		string	"_Floor"
		color "0 0.6 0 1"
		size "76 25"
	}

	string rank_and_name_shadow
	{
		string	"*cvar:mn_chrrankprefix *cvar:mn_name"
		pos		"27 26"
		size	"265 20"
		color	"0 0 0 1"
		contentalign	ALIGN_CL
	}
	string rank_and_name
	{
		string	"*cvar:mn_chrrankprefix *cvar:mn_name"
		pos		"26 25"
		size	"265 20"
		contentalign	ALIGN_CL
	}

	// ==================
	// model
	// ==================

	model actor
	{
		{
			src		*cvar:mn_body
			skin	*cvar:mn_body_skin
			anim	"stand_menu"
			origin	"0 -25 0"
			angles	"0 82 90"
			scale	"5 5 5"
			pos		"168 74"
			size	"191 262"
		}

		model head
		{
			src		*cvar:mn_head
			skin	*cvar:mn_head_skin
			tag		"tag_head"
			scale	"1.0 1.0 1.0"
		}
	}

	// drag controls, extended over the whole window
	controls drag {
		pos		"10 10"
		size	"492 492"
		OnRClick { cmd "ui_pop;" }
		onWheelUp	{ cmd "actor_next;" }
		onWheelDown	{ cmd "actor_prev;" }
	}

	// ==================================================
	// Containers (see inventory.ufo for the definition)
	// ==================================================

	// Implants are not switchable in combat - thus no display of "container implant" needed.
	container right		{ pos "33 181" }
	container left		{ pos "357 181" }
	// Armour is not switchable in combat - thus no display of "container armour" needed.
	container floor		{ pos "30 362" }
	container backpack	{ pos "357 59" }
	container belt		{ pos "57 273" }
	container holster	{ pos "383 273" }
	container headgear	{ pos "166 107" }

	// ==================
	// buttons
	// ==================

	button bt_exit
	{
		tooltip		"_Close"
		background	"buttons/large_blue"
		size "64 37"
		pos		"428 458"
		icon "icons/return"
		onClick	{ call *node:root.hideinventory }
	}

	button bt_load
	{
		pos "90 310"
		contentalign ALIGN_CL
		string	"_0/0 Kg"
		color "1 1 1 1"
		flashcolor "1 0 0 1"
		size "106 25"
		onClick { cmd "hud_updateactorload;" }
	}

	confunc inv_actorload {
		*node:root.bt_load@string = "<1>"
		*node:root.bt_load@tooltip = "<2>"
		if ( <3> > 0 ) { *node:root.bt_load@color = "0 1 0 1" }
		elif ( <3> < 0 ) { *node:root.bt_load@color = "1 1 0 1" }
		else { *node:root.bt_load@color = "1 1 1 1" }
		if ( <4> > 0 ) { *node:root.bt_load@flash = true }
		else { *node:root.bt_load@flash = false }
	}

	func onWindowOpened {
		*cvar:inventory_window_open = 1
		// make sure mn_chrrankprefix is cleared when we are not in campaign anymore
		if ( *cvar:mn_base_count > 0 ) { } else { *cvar:mn_chrrankprefix = "" }
		// the physdat window will automatically be closed if open
		if ( *cvar:physdat_window_open == 1 ) { cmd "ui_close hudphysdat;" }
		cmd "ui_addcvarlistener cl_selected hud_updateactorload;"
		cmd "hud_updateactorload;"
	}

	func onWindowClosed {
		cmd "ui_removecvarlistener cl_selected hud_updateactorload;"
		delete *cvar:inventory_window_open
	}
}

// ==================
// HUD INVENTORY
// ==================

window hudinv extends inventory
{
}
